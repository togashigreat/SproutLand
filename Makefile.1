# Lie about being linux so clang doesn't try to make this an android activity/native window
OS = linux
go_ldflags = -buildmode=pie -linkmode 'external'
# -extldflags '-static'
cflags = -L/data/data/com.termux/files/usr/lib/
# -lm -ldl -lrt -lwayland-client -lwayland-cursor -lwayland-egl -lxkbcommon -lGL -lpthread -lc
Artifact = raylib

install_deps:
    pkg install x11-repo
    pkg install termux-x11-nightly golang mesa mesa-dev libxi libxcursor libxrandr libxinerama libwayland xwayland libxkbcommon libllvm termux-elf-cleaner make libx11 xorgproto

build: xstart
    sleep 1
    CGO_CFLAGS="-fPIC" \
        CGO_LDFLAGS="-fPIC" \
        # CFLAGS="$(cflags)" \
        # CXXFLAGS="$(cflags)" \
        GOARCH=arm64 \
        CGO_ENABLED=1 \
        GOOS=$(OS) \
        go build -ldflags "$(go_ldflags)" -x .
    termux-elf-cleaner $(Artifact)
		DISPLAY=":1" ./$(Artifact)
    am start --user 0 -n com.termux.x11/.MainActivity

xstart:
    DISPLAY=":1" termux-x11 :1 &

xstop:
    pkill -f com.termux.x11
